<?xml version="1.0" encoding="UTF-8"?>
<!--

Copyright (C) 2012 Facebook, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.sonatype.oss</groupId>
    <artifactId>oss-parent</artifactId>
    <version>7</version>
  </parent>

  <groupId>com.facebook</groupId>
  <artifactId>facebook-oss-pom</artifactId>
  <packaging>pom</packaging>
  <version>1-SNAPSHOT</version>
  <name>facebook-oss-pom</name>
  <description>Parent POM for Facebook open source java projects that should be distributed through the central Maven repository using oss.sonatype.org</description>

  <url>https://developers.facebook.com/opensource/</url>
  <inceptionYear>2012</inceptionYear>

  <licenses>
    <license>
      <name>Apache 2</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
      <comments>A business-friendly OSS license</comments>
    </license>
  </licenses>

  <scm>
    <connection>scm:git:git://github.com/facebook/facebook-oss-pom.git</connection>
    <developerConnection>scm:git:git@github.com:facebook/facebook-oss-pom.git</developerConnection>
    <url>https://github.com/facebook/facebook-oss-pom</url>
    <tag>HEAD</tag>
  </scm>

  <organization>
    <name>Facebook, Inc.</name>
    <url>https://www.facebook.com/</url>
  </organization>

  <developers>
    <developer>
      <id>hgschmie</id>
      <name>Henning Schmiedehausen</name>
      <email>hgschmie@fb.com</email>
      <timezone>-8</timezone>
    </developer>
  </developers>

  <properties>
    <!-- see http://docs.codehaus.org/display/MAVENUSER/POM+Element+for+Source+File+Encoding -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.build.targetJdk>1.7</project.build.targetJdk>

    <!-- Facebook build specific options are prefixed fb.build. -->

    <!-- Default jvm size for compiler, tests etc. -->
    <fb.build.jvmsize>1024m</fb.build.jvmsize>

    <!-- Controls all the checkers run when building the project.            -->
    <!-- Can be activated with -Dfb.check.skip-all=true on the command line. -->
    <fb.check.skip-all>false</fb.check.skip-all>
    <fb.check.skip-enforcer>${fb.check.skip-all}</fb.check.skip-enforcer>
    <fb.check.skip-dependency>${fb.check.skip-all}</fb.check.skip-dependency>
    <fb.check.skip-duplicate-finder>${fb.check.skip-all}</fb.check.skip-duplicate-finder>
    <fb.check.skip-dependency-version-check>${fb.check.skip-all}</fb.check.skip-dependency-version-check>
    <fb.check.skip-findbugs>${fb.check.skip-all}</fb.check.skip-findbugs>
    <fb.check.skip-pmd>${fb.check.skip-all}</fb.check.skip-pmd>
    <fb.check.skip-license>${fb.check.skip-all}</fb.check.skip-license>
    <fb.check.skip-cobertura>${fb.check.skip-all}</fb.check.skip-cobertura>

    <fb.check.fail-all>true</fb.check.fail-all>
    <fb.check.fail-enforcer>${fb.check.fail-all}</fb.check.fail-enforcer>
    <fb.check.fail-dependency>${fb.check.fail-all}</fb.check.fail-dependency>
    <fb.check.fail-duplicate-finder>${fb.check.fail-all}</fb.check.fail-duplicate-finder>
    <fb.check.fail-dependency-version-check>${fb.check.fail-all}</fb.check.fail-dependency-version-check>
    <fb.check.fail-findbugs>${fb.check.fail-all}</fb.check.fail-findbugs>
    <fb.check.fail-pmd>${fb.check.fail-all}</fb.check.fail-pmd>
    <fb.check.fail-license>${fb.check.fail-all}</fb.check.fail-license>

    <!-- the current "best" version of maven -->
    <fb.maven.version>3.0.4</fb.maven.version>

    <!-- In Multimodule builds, override this to point at the parent directory for e.g. the license resources. -->
    <!-- See http://stackoverflow.com/questions/1012402/maven2-property-that-indicates-the-parent-directory    -->
    <fb.main.basedir>${project.basedir}</fb.main.basedir>

    <!-- Plugin versions used in multiple places -->
    <dep.plugin.surefire.version>2.12.4</dep.plugin.surefire.version>
    <dep.plugin.site.version>3.2</dep.plugin.site.version>
    <dep.plugin.pmd.version>2.7.1</dep.plugin.pmd.version>
    <dep.plugin.findbugs.version>2.5.2</dep.plugin.findbugs.version>
    <dep.plugin.cobertura.version>2.5.2</dep.plugin.cobertura.version>

    <!-- Dependency versions that should be the same everywhere. -->
    <dep.guice.version>3.0</dep.guice.version>
    <dep.slf4j.version>1.7.2</dep.slf4j.version>
    <dep.logback.version>1.0.7</dep.logback.version>
  </properties>

  <prerequisites>
    <maven>${fb.maven.version}</maven>
  </prerequisites>

  <build>
    <pluginManagement>
      <plugins>

        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
        <!-- The plugin versions in here are pure "range", don't bother syncing them to the actual plugins. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <versionRange>[0,)</versionRange>
                    <goals>
                      <goal>enforce</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>com.ning.maven.plugins</groupId>
                    <artifactId>maven-dependency-versions-check-plugin</artifactId>
                    <versionRange>[0,)</versionRange>
                    <goals>
                      <goal>check</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-scm-plugin</artifactId>
          <version>1.8.1</version>
          <configuration>
            <connectionType>developerConnection</connectionType>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.7</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>2.5</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.4</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>1.1.1</version>
          <executions>
            <execution>
              <id>default</id>
              <phase>verify</phase>
              <goals>
                <goal>enforce</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <skip>${fb.check.skip-enforcer}</skip>
            <fail>${fb.check.fail-enforcer}</fail>
            <failFast>false</failFast>
            <rules>
              <!-- The following dependencies are hazardous for builds. -->
              <bannedDependencies>
                <!-- See http://www.sonatype.com/people/2007/06/how-to-merge-sub-items-from-parent-pom-to-child-pom-in-a-maven-plugin-configuration-2/ for details... -->
                <excludes combine.children="append">
                  <!-- clashes with commons-logging:commons-logging -->
                  <exclude>commons-logging:commons-logging-api</exclude>
                  <!-- clashes with cglib:cglib-nodep -->
                  <exclude>cglib:cglib</exclude>
                  <!-- junit repackages hamcrest into its own jar, which is a big no-no.
                       junit-dep fixes this problem -->
                  <exclude>junit:junit</exclude>
                  <!-- use guava -->
                  <exclude>com.google.collections:google-collections</exclude>
                  <!-- Clashes with com.google.code.findbugs:annotations and having both jars -->
                  <!-- as a dependency then clashes with the dependency checker (because it   -->
                  <!-- is not very good at handling annotations). Use the annotations jar     -->
                  <!-- instead which has all jsr305 annotations and the additional findbugs   -->
                  <!-- stuff. -->
                  <exclude>com.google.code.findbugs:jsr305</exclude>
                </excludes>
              </bannedDependencies>
              <requireMavenVersion>
                <version>${fb.maven.version}</version>
              </requireMavenVersion>
              <requireJavaVersion>
                <version>${project.build.targetJdk}</version>
              </requireJavaVersion>
            </rules>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.5.1</version>
          <configuration>
            <skip>${fb.check.skip-dependency}</skip>
            <failOnWarning>${fb.check.fail-dependency}</failOnWarning>
            <ignoreNonCompile>true</ignoreNonCompile>
          </configuration>
          <executions>
            <execution>
              <id>default</id>
              <phase>verify</phase>
              <goals>
                <goal>analyze-only</goal>
                <goal>analyze-duplicate</goal>
                <goal>analyze-dep-mgt</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- Tweak the compiler to use more memory and use UTF-8 for the source code. -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>2.5.1</version>
          <configuration>
            <source>${project.build.targetJdk}</source>
            <target>${project.build.targetJdk}</target>
            <encoding>${project.build.sourceEncoding}</encoding>
            <maxmem>${fb.build.jvmsize}</maxmem>
            <showWarnings>true</showWarnings>
            <compilerArguments combine.children="append">
              <Werror />
            </compilerArguments>
          </configuration>
        </plugin>

        <!-- Resource plugins should always use UTF-8 -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.6</version>
          <configuration>
            <encoding>${project.build.sourceEncoding}</encoding>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>2.3</version>
          <configuration>
            <!-- must be true for jar-with-dependencies builds -->
            <appendAssemblyId>true</appendAssemblyId>
            <!-- Always use GNU tar mode. -->
            <tarLongFileMode>gnu</tarLongFileMode>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${dep.plugin.surefire.version}</version>
          <configuration>
            <systemPropertyVariables combine.children="append">
              <file.encoding>${project.build.sourceEncoding}</file.encoding>
              <sun.jnu.encoding>${project.build.sourceEncoding}</sun.jnu.encoding>
              <user.timezone>UTC</user.timezone>
              <java.awt.headless>true</java.awt.headless>
            </systemPropertyVariables>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.3.2</version>
          <configuration>
            <releaseProfiles>build-javadoc,check-build-basic,check-build-extended,sign-release</releaseProfiles>
            <autoVersionSubmodules>true</autoVersionSubmodules>
            <mavenExecutorId>forked-path</mavenExecutorId>
            <pushChanges>false</pushChanges>
            <localCheckout>true</localCheckout>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.9</version>
          <configuration>
            <source>${project.build.targetJdk}</source>
            <target>${project.build.targetJdk}</target>
            <encoding>${project.build.sourceEncoding}</encoding>
            <maxmemory>${fb.build.jvmsize}</maxmemory>
            <additionalparam>-quiet</additionalparam>
          </configuration>
          <executions>
            <execution>
              <id>attach-javadocs</id>
              <phase>verify</phase>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- the mavanagaiata plugin provides information from a git build
             to the generated artifacts -->
        <plugin>
          <groupId>com.github.koraktor</groupId>
          <artifactId>mavanagaiata</artifactId>
          <version>0.3.4</version>
          <configuration>
            <!-- use ISO-8601 timestamps -->
            <dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
          </configuration>
          <executions>
            <execution>
              <id>default</id>
              <phase>validate</phase>
              <goals>
                <goal>commit</goal>
                <goal>branch</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- Always build a jar with the test classes -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.4</version>
          <executions>
            <execution>
              <id>attach-tests</id>
              <phase>package</phase>
              <goals>
                <goal>test-jar</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <!-- do not build an empty jar if the project is
                 e.g. a pom project -->
            <skipIfEmpty>true</skipIfEmpty>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                <addClasspath>false</addClasspath>
              </manifest>
              <manifestEntries>
                <!-- override Implementation-Version to include git commit info -->
                <!-- (requires mavanagaiata plugin) -->
                <Implementation-Version>
                  ${project.version}-${mvngit.commit.id}-${mvngit.branch}-${mvngit.commit.committer.date}
                </Implementation-Version>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>

        <!-- bundle up source code into jars for both the main and the test sources -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.2.1</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <phase>package</phase>
              <goals>
                <goal>jar-no-fork</goal>
                <goal>test-jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>com.ning.maven.plugins</groupId>
          <artifactId>maven-duplicate-finder-plugin</artifactId>
          <version>1.0.3</version>
          <executions>
            <execution>
              <id>default</id>
              <phase>verify</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <skip>${fb.check.skip-duplicate-finder}</skip>
            <failBuildInCaseOfConflict>${fb.check.fail-duplicate-finder}</failBuildInCaseOfConflict>
            <exceptions combine.children="append">
              <!-- Well done, Apache... -->
              <exception>
                <conflictingDependencies>
                  <dependency>
                    <groupId>commons-beanutils</groupId>
                    <artifactId>commons-beanutils</artifactId>
                  </dependency>
                  <dependency>
                    <groupId>commons-beanutils</groupId>
                    <artifactId>commons-beanutils-core</artifactId>
                  </dependency>
                  <dependency>
                    <groupId>commons-collections</groupId>
                    <artifactId>commons-collections</artifactId>
                  </dependency>
                </conflictingDependencies>
                <classes>
                  <class>org.apache.commons.collections.ArrayStack</class>
                  <class>org.apache.commons.collections.Buffer</class>
                  <class>org.apache.commons.collections.BufferUnderflowException</class>
                  <class>org.apache.commons.collections.FastHashMap</class>
                </classes>
              </exception>
              <exception>
                <conflictingDependencies>
                  <dependency>
                    <groupId>commons-beanutils</groupId>
                    <artifactId>commons-beanutils</artifactId>
                  </dependency>
                  <dependency>
                    <groupId>commons-beanutils</groupId>
                    <artifactId>commons-beanutils-core</artifactId>
                  </dependency>
                </conflictingDependencies>
                <packages>
                  <package>org.apache.commons.beanutils</package>
                </packages>
              </exception>
            </exceptions>
            <ignoredResources combine.children="append">
              <ignoredResource>.*\.html</ignoredResource>
              <ignoredResource>META-INF/.*</ignoredResource>
              <ignoredResource>about_files/.*</ignoredResource>
              <ignoredResource>plugin\.properties</ignoredResource>
              <ignoredResource>.*\.java</ignoredResource>
            </ignoredResources>
          </configuration>
        </plugin>

        <plugin>
          <groupId>com.ning.maven.plugins</groupId>
          <artifactId>maven-dependency-versions-check-plugin</artifactId>
          <version>2.0.2</version>
          <configuration>
            <skip>${fb.check.skip-dependency-version-check}</skip>
            <failBuildInCaseOfConflict>${fb.check.fail-dependency-version-check}</failBuildInCaseOfConflict>
            <failOnWarning>${fb.check.fail-dependency-version-check}</failOnWarning>
          </configuration>
          <executions>
            <execution>
              <id>default</id>
              <phase>verify</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>findbugs-maven-plugin</artifactId>
          <version>${dep.plugin.findbugs.version}</version>
          <configuration>
            <skip>${fb.check.skip-findbugs}</skip>
            <jvmargs>-Xmx${fb.build.jvmsize}</jvmargs>
            <failOnError>${fb.check.fail-findbugs}</failOnError>
          </configuration>
          <executions>
            <execution>
              <id>default</id>
              <phase>verify</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-pmd-plugin</artifactId>
          <version>${dep.plugin.pmd.version}</version>
          <configuration>
            <skip>${fb.check.skip-pmd}</skip>
            <failOnViolation>${fb.check.fail-pmd}</failOnViolation>
            <targetJdk>${project.build.targetJdk}</targetJdk>
            <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
            <minimumTokens>100</minimumTokens>
            <excludes>
              <exclude>**/*Bean.java</exclude>
              <exclude>**/generated/*.java</exclude>
            </excludes>
            <excludeRoots>
              <excludeRoot>target/generated-sources/stubs</excludeRoot>
            </excludeRoots>
            <rulesets>
              <ruleset>/rulesets/basic.xml</ruleset>
              <ruleset>/rulesets/clone.xml</ruleset>
              <ruleset>/rulesets/finalizers.xml</ruleset>
            </rulesets>
          </configuration>
          <executions>
            <execution>
              <id>default</id>
              <phase>verify</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>com.mycila.maven-license-plugin</groupId>
          <artifactId>maven-license-plugin</artifactId>
          <version>1.10.b1</version>
          <configuration>
            <skip>${fb.check.skip-license}</skip>
            <failIfMissing>${fb.check.fail-license}</failIfMissing>
            <header>${fb.main.basedir}/src/license/LICENSE-HEADER.txt</header>
            <mapping>
              <java>SLASHSTAR_STYLE</java>
            </mapping>
            <properties>
              <year>${project.inceptionYear}</year>
            </properties>
            <headerSections>
              <headerSection>
                <key>COPYRIGHT_SECTION</key>
                <defaultValue>Copyright (C) ${project.inceptionYear} Facebook, Inc.</defaultValue>
                <ensureMatch>Copyright \(C\) \d{4} .+</ensureMatch>
                <multiLineMatch>false</multiLineMatch>
              </headerSection>
            </headerSections>
            <strictCheck>true</strictCheck>
            <aggregate>true</aggregate>
            <useDefaultExcludes>true</useDefaultExcludes>
            <encoding>${project.build.sourceEncoding}</encoding>
            <excludes>
              <exclude>.*/**</exclude>
              <exclude>**/*.md</exclude>
              <exclude>**/*.sh</exclude>
              <exclude>**/*.txt</exclude>
              <exclude>**/*.thrift</exclude>
              <exclude>**/*.g</exclude>
              <exclude>**/*.releaseBackup</exclude>
              <exclude>**/*.st</exclude>
              <exclude>**/src/license/**.txt</exclude>
            </excludes>
            <includes>
              <include>src/**</include>
              <include>**/pom.xml</include>
            </includes>
          </configuration>
          <executions>
            <execution>
              <id>default</id>
              <phase>verify</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>cobertura-maven-plugin</artifactId>
          <version>${dep.plugin.cobertura.version}</version>
          <configuration>
            <maxmem>${fb.build.jvmsize}</maxmem>
            <skip>${fb.check.skip-cobertura}</skip>
            <formats>
              <format>xml</format>
              <format>html</format>
            </formats>
          </configuration>
          <executions>
            <execution>
              <id>default</id>
              <phase>verify</phase>
              <goals>
                <goal>cobertura</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>1.4</version>
          <configuration>
            <useAgent>true</useAgent>
          </configuration>
          <executions>
            <execution>
              <id>sign-artifacts</id>
              <phase>verify</phase>
              <goals>
                <goal>sign</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${dep.plugin.site.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <!-- This is the list of plugins used for the main build. -->
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>2.6</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>${dep.plugin.surefire.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>${dep.plugin.pmd.version}</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>${dep.plugin.findbugs.version}</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <version>${dep.plugin.cobertura.version}</version>
      </plugin>
    </plugins>
  </reporting>



  <!-- The following dependency should be the same everywhere. -->
  <dependencyManagement>
    <dependencies>
      <!-- Google Guice -->
      <dependency>
        <groupId>com.google.inject</groupId>
        <artifactId>guice</artifactId>
        <version>${dep.guice.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.inject.extensions</groupId>
        <artifactId>guice-servlet</artifactId>
        <version>${dep.guice.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.inject.extensions</groupId>
        <artifactId>guice-assistedinject</artifactId>
        <version>${dep.guice.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.inject.extensions</groupId>
        <artifactId>guice-multibindings</artifactId>
        <version>${dep.guice.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.inject.extensions</groupId>
        <artifactId>guice-throwingproviders</artifactId>
        <version>${dep.guice.version}</version>
      </dependency>

      <!-- Java Base libs (aka JDK 2) -->
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>13.0.1</version>
      </dependency>

      <!-- Java APIs -->
      <dependency>
        <groupId>javax.inject</groupId>
        <artifactId>javax.inject</artifactId>
        <version>1</version>
      </dependency>
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>3.0.1</version>
      </dependency>

      <!-- Joda -->
      <dependency>
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>2.1</version>
      </dependency>

      <!-- logging -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${dep.slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-jcl</artifactId>
        <version>${dep.slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-jdk14</artifactId>
        <version>${dep.slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-log4j12</artifactId>
        <version>${dep.slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-nop</artifactId>
        <version>${dep.slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-simple</artifactId>
        <version>${dep.slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-ext</artifactId>
        <version>${dep.slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jcl-over-slf4j</artifactId>
        <version>${dep.slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jul-to-slf4j</artifactId>
        <version>${dep.slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>log4j-over-slf4j</artifactId>
        <version>${dep.slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>${dep.logback.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${dep.logback.version}</version>
      </dependency>
      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>1.2.17</version>
      </dependency>

      <!-- Apache commons components -->
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>3.1</version>
      </dependency>
      <dependency>
        <groupId>commons-lang</groupId>
        <artifactId>commons-lang</artifactId>
        <version>2.6</version>
      </dependency>
      <dependency>
        <groupId>commons-configuration</groupId>
        <artifactId>commons-configuration</artifactId>
        <version>1.9</version>
      </dependency>
      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>1.7</version>
      </dependency>
      <dependency>
        <groupId>commons-collections</groupId>
        <artifactId>commons-collections</artifactId>
        <version>3.2.1</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>2.4</version>
      </dependency>
      <dependency>
        <groupId>commons-beanutils</groupId>
        <artifactId>commons-beanutils</artifactId>
        <version>1.8.3</version>
      </dependency>

      <!-- findbugs -->
      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>annotations</artifactId>
        <version>2.0.1</version>
      </dependency>

      <!-- Testing -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit-dep</artifactId>
        <version>4.10</version>
      </dependency>
      <dependency>
        <groupId>org.testng</groupId>
        <artifactId>testng</artifactId>
        <version>6.8</version>
        <exclusions>
          <exclusion>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.easymock</groupId>
        <artifactId>easymock</artifactId>
        <version>3.1</version>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-core</artifactId>
        <version>1.3</version>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-library</artifactId>
        <version>1.3</version>
      </dependency>
      <dependency>
        <groupId>org.objenesis</groupId>
        <artifactId>objenesis</artifactId>
        <version>1.2</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <profiles>
    <profile>
      <id>build-javadoc</id>
      <activation>
        <property>
          <name>build-javadoc</name>
        </property>
      </activation>
      <build>
        <plugins>
          <!-- oss requires a javadoc jar. Build one when releasing. -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- This profile runs all the basic checkers. It *should* be activated all the time. -->
    <profile>
      <id>check-build-basic</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
          </plugin>

          <plugin>
            <groupId>com.ning.maven.plugins</groupId>
            <artifactId>maven-dependency-versions-check-plugin</artifactId>
          </plugin>

          <plugin>
            <groupId>com.ning.maven.plugins</groupId>
            <artifactId>maven-duplicate-finder-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- This profile runs the extended checkers. It will be run when an artifact is deployed so
         having it activated all the time is probably a good idea.
    -->
    <profile>
      <id>check-build-extended</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>findbugs-maven-plugin</artifactId>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
          </plugin>

          <plugin>
            <groupId>com.mycila.maven-license-plugin</groupId>
            <artifactId>maven-license-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Sign artifacts using gpg for oss upload -->
    <profile>
      <id>sign-release</id>
      <activation>
        <property>
          <name>sign-release</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
